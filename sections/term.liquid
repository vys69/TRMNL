<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery.terminal/2.30.0/css/jquery.terminal.min.css">
<style>
  body, html {
      font-family: Arial, sans-serif;
      height: 100%;
      margin: 0;
      padding: 0;
  }
  #terminal {
      height: 100%;
      width: 100%;
  }
  html, body{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

#terminal {
    height: 100% !important;
    width: 100% !important;
}
</style>
<h1>cock and balls</h1>
<div id="terminal"></div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.terminal/2.30.0/js/jquery.terminal.min.js"></script>
<script>
        $(document).ready(function() {
            const collections = {
                "summer": ["sunglasses", "hat", "shorts"],
                "winter": ["jacket", "scarf", "gloves"]
            };

            const products = {
                "sunglasses": { price: "$50", title: "Cool Sunglasses", description: "Lorem ipsum dolor sit amet.", details: "UV protection", image: "image_url" },
                "hat": { price: "$20", title: "Stylish Hat", description: "Lorem ipsum dolor sit amet.", details: "One size fits all", image: "image_url" },
                "shorts": { price: "$30", title: "Comfortable Shorts", description: "Lorem ipsum dolor sit amet.", details: "100% cotton", image: "image_url" },
                "jacket": { price: "$100", title: "Warm Jacket", description: "Lorem ipsum dolor sit amet.", details: "Waterproof", image: "image_url" },
                "scarf": { price: "$25", title: "Cozy Scarf", description: "Lorem ipsum dolor sit amet.", details: "Wool", image: "image_url" },
                "gloves": { price: "$15", title: "Winter Gloves", description: "Lorem ipsum dolor sit amet.", details: "Thermal", image: "image_url" }
            };

            const cart = [
                { title: "Cool Sunglasses", price: "$50", discountedPrice: "$45" },
                { title: "Stylish Hat", price: "$20", discountedPrice: "$18" }
            ];

            const asciiHeader = `
            .?J7YGJ~^                                                                      
          ?Y: 7J^JP~5^                                                                    
         Y?  Y?  ~G^YGYJ^                 ~YB##BY~    Y555PPP5?^   ^55! :555Y       ^555J 
        JY..7GJJ5PGGGGG5??!~~:          Y@@@G55B@@@? .@@@#BBB&@@@! J@@B !@@@@P     .@@@@@ 
    .^~?GPPGGPGGPPGGGGG5????J?         B@@P     .GBB..@@@     7@@@ ?@@G !@@@@@!    #@@@@& 
   5GGGGGPPGB#####GGGGG5??????.       :@@@    ...... .@@@!~~~7#@@7 ?@@G !@@#B@@.  Y@@5@@& 
  :GGGGPP#@@@@@@@&PGGGG5??????~       ^@@@   .&@&@@@J.@@@@@@@@@@5  ?@@G !@@# &@& ^@@Y.@@& 
  !GGGPG&@@@@&&@@BPGGGG5??????7        B@@5     :&@@Y.@@@.    P@@G ?@@G !@@# :@@G&@# .@@& 
  YGGGP#@@@@GPPPGPGGGGG5???????.        5@@@GYYG@@&@Y.@@@     ^@@& ?@@G !@@&  ?@@@&  .@@@ 
 .PGGGPB@@@@@&BGPGGGGGG5??????J^       ..^7PB##BJ.^G~ 5BB.     5GB.7##Y ^G57   ?G#J::^G5J 
 ^GGGGGP#@@@@@@@BPGGGGG5???????7       @@@.           !@@@@.    ~@@@@@@@@&P:  .P&@@@@@&G: 
 ?GGGGPPPPB&@@@@@BPGGGG5????????.     .@@@.          :@@&@@#    7@@#....7@@@. @@@?   ~&@@!
 5GGGPG&#GGG@@@@@BPGGGG5???????J^      @@@.          &@@ 7@@P   7@@#....7@@#. G@@B!:. .:..
:GGGGP#@@@@@@@@@&GGGGGG5????????!      @@@.         B@@~  P@@!  7@@@&&&@@@#~   :J#&@@@&5^ 
!GGGGPG#&@@@@@&BPPGGGGG5?????????      @@@.        J@@@###&@@@: 7@@#     Y@@G ~~^   .~#@@B
YGGGGGGGGGGGGPPPGGGGGGG5????????J:    .@@@~.::::: ^@@&JYYYYY@@& !@@#....:G@@#.&@@P:. .5@@&
..:^~!7?JY5PPGGGGGGGGGGP????????7^     &@@@@@@@@@~&@@.      J@@5!@@@@@@@@@#J   ?#@@@@@@&Y 
            ..:^~!?JY5P57!~^:..        .......... ..         ... ........         .::..   
`;

            const copyrightText = "Copyright (c) 2021-2024 GRIM'S LAB <https://grimlabs.co>";
            const helpText = "[[;white;]help] [[;grey;]show a list of commands]";

            const neofetchOutput = `
                __.;=====;.__                   grim@grimlabs 
            _.=+==++=++=+=+===;.                ------------- 
             -=+++=+===+=+=+++++=_              OS: Void Linux x86_64 
        .     -=:\`\`     \\\`--==+=++==.            Host: VirtualBox 1.2 
       _vi,    \\\`            --+=++++:           Kernel: 6.6.21_1 
      .uvnvi.       _._       -==+==+.          Uptime: 5 mins 
     .vvnvnI\\\`    .;==|==;.     :|=||=|.         Packages: 588 (xbps-query) 
+QmQQmpvvnv; _yYsyQQWUUQQQm #QmQ#:QQQWUV$QQm.   Shell: bash 5.2.21 
 -QQWQWpvvowZ?.wQQQE==<QWWQ/QWQW.QQWW(: jQWQE   Resolution: 1280x800 
  -$QQQQmmU'  jQQQ@+=<QWQQ)mQQQ.mQQQC+;jWQQ@'   DE: Xfce 4.18 
   -$WQ8YnI:   QWQQwgQQWV\\\`mWQQ.jQWQQgyyWW@!     Theme: gnome [GTK2], Adwaita [G 
     -1vvnvv.     \\\`~+++\`        ++|+++          Icons: Adwaita [GTK2/3] 
      +vnvnnv,                 \\\`-|===           Terminal: xfce4-terminal 
       +vnvnvns.           .      :=-           Terminal Font: Monospace 12 
        -Invnvvnsi..___..=sv=.     \\\`            CPU: AMD Ryzen 5 2600 (5) @ 3.3 
          +Invnvnvnnnnnnnnvvnn;.                GPU: 00:02.0 VMware SVGA II Ada 
            ~|Invnvnvvnvvvnnv}+\\\`                Memory: 316MiB / 15998MiB 
               -~|{*l}*|~
                                                                        
                                                                        
`;

            $('#terminal').terminal(function(command, term) {
                const args = command.split(' ');
                switch (args[0]) {
                    case 'sudo':
                        if (args[1] === 'rm' && args[2] === '-rf') {
                            term.echo('fuck you');
                        }
                        break;
                    case 'collections':
                        term.echo(Object.keys(collections).join(', '));
                        break;
                    case 'collection':
                        if (args[1] && collections[args[1]]) {
                            term.echo(collections[args[1]].join(', '));
                        } else {
                            term.echo('Collection not found.');
                        }
                        break;
                    case 'product':
                        if (args[1] && products[args[1]]) {
                            const product = products[args[1]];
                            term.echo(`[[;white;]Title: [[;grey;]${product.title}]\n[[;white;]Price: [[;grey;]${product.price}]\n[[;white;]Description: [[;grey;]${product.description}]\n[[;white;]Details: [[;grey;]${product.details}]\n[[;white;]Image: [[;grey;]${product.image}]`);
                        } else {
                            term.echo('Product not found.');
                        }
                        break;
                    case 'cart':
                        cart.forEach(item => {
                            term.echo(`Title: ${item.title}\nPrice: ${item.price} --${item.discountedPrice}`);
                        });
                        break;
                    case 'home':
                        term.echo('Going home...');
                        break;
                    case 'help':
                        term.echo(
                            '\n' +
                            '[[;white;]collections]\n' +
                            '- [[;grey;]lists all collections in the store]\n' +
                            '\n' +
                            '[[;white;]collection &#91;accepts: [[;green;]collection_name]&#93;]\n' +
                            '- [[;grey;]lists all products in a collection]\n' +
                            '\n' +
                            '[[;white;]product &#91;accepts: [[;green;]product_name]&#93;]\n' +
                            '- [[;grey;]lists details of a specific product]\n' +
                            '\n' +
                            '[[;white;]cart]\n' +
                            '- [[;grey;]lists all products in the cart]\n' +
                            '\n' +
                            '[[;white;]home]\n' +
                            '- [[;grey;]returns to the main menu]\n' +
                            '\n' +
                            '[[;white;]help]\n' +
                            '- [[;grey;]lists all commands]\n' +
                            '\n' +
                            '[[;white;]neofetch]\n' +
                            '- [[;grey;]displays system information]\n' +
                            '\n' );
                        break;
                    case 'neofetch':
                        term.echo(neofetchOutput);
                        break;
                    default:
                        term.echo('Command not found. Type "help" for a list of commands.');
                        break;
                }
            }, {
                greetings: asciiHeader + '\n' + copyrightText + '\n' + helpText,
                name: 'shop_terminal',
                height: '100%',
                width: '100%',
                prompt: '[[;green;]&#91;$&#93;] '
            });
        });
    </script>

{% schema %}
{
  "name": "Shop Terminal",
  "settings": [],
  "presets": [
    {
      "name": "Default",
      "category": "Custom"
    }
  ]
}
{% endschema %}
